## Tor

Anonymous Port Scanning: Nmap + Tor + ProxyChains
Posted on Tuesday December 27th, 2016by adminIn this article i will explain how to stay anonymous during port scanning with Nmap (utility for network discovery and security auditing).
I’ll show how to perform an anonymous port scanning through the Tor network, using ProxyChains utility.
I’ll also show how to get round a situation where scan fails, because Tor endpoints are blocked.

Install Tor + Nmap + ProxyChains
To perform an anonymous port scanning, we need to install the following tools:


Tor
Install Tor from the standard repositories:
$ sudo apt-get install tor
Nmap
$ sudo apt-get install nmap
ProxyChains
$ sudo apt-get install proxychains
ProxyChains is already configured to use Tor by default.
You can verify this by looking up /etc/proxychains.conf.
The last lines should be like these:
[ProxyList]
# add proxy here ...
# meanwile
# defaults set to "tor"
socks4 127.0.0.1 9050 
Anonymous Port Scanning Through Tor
Run the following command to perform an anonymous Nmap scanning through Tor network:
$ proxychains nmap -sT -PN -n -sV -p 80,443,21,22 217.xx.xx.xx
ProxyChains-3.1 (http://proxychains.sf.net)

Starting Nmap 6.00 ( http://nmap.org ) at 2014-03-24 17:34 EET
|S-chain|-<>-127.0.0.1:9050-<><>-217.xx.xx.xx:443-<><>-OK
|S-chain|-<>-127.0.0.1:9050-<><>-217.xx.xx.xx:21-<><>-OK
|S-chain|-<>-127.0.0.1:9050-<><>-217.xx.xx.xx:80-<><>-OK
|S-chain|-<>-127.0.0.1:9050-<><>-217.xx.xx.xx:22-<--denied

Nmap scan report for 217.xx.xx.xx
Host is up (0.14s latency).
PORT    STATE  SERVICE  VERSION
21/tcp  open   ftp      Pure-FTPd
22/tcp  closed ssh
80/tcp  open   http     Apache httpd 2.2.26 ((CentOS))
443/tcp open   ssl/http Apache httpd 2.2.26 ((CentOS))In the scan log we can see the ‘chain’ that goes from Tor-proxy (127.0.0.1:9050) to our scanned host (217.xx.xx.xx).

Nmap Through Tor: Get Round Blocked Endpoints
It is possible that we will encounter a situation where scan fails, because Tor endpoints are blocked.
The solution may be in adding common public proxy server to the ‘chain’.
We can do that by simply editing the /etc/proxychains.conf and adding a new entry at the end of the [ProxyList] (be sure that random_chain option is disabled).
[ProxyList]
# add proxy here ...
# meanwile
# defaults set to "tor"
socks4  127.0.0.1 9050
socks4 115.71.237.212 1080 
The new ‘chain’ goes through the Tor-proxy (127.0.0.1:9050) to some public proxy server (115.71.237.212:1080) and then to our scanned host (217.xx.xx.xx).
$ proxychains nmap -sT -PN -n -sV -p 21 217.xx.xx.xx













  1. Definition of SOCKS 
  Protocol for sessions traversal across firewall securely. SOCKet Secure  (SOCKS) is an Internet protocol that routes network packets between a  client and server through a proxy server. SOCKS5 additionally provides  authentication so only authorized users may access a server.  Practically, a SOCKS server proxies TCP connections to an arbitrary IP  address, and provides a means for UDP packets to be forwarded.SOCKS  performs at Layer 5 of the OSI model (the session layer, an intermediate  layer between the presentation layer and the transport layer). 

  2. Difference between SOCKS4 and SOCKS5 
  SOCKS4 and SOCKS5 both belong to SOCKS protocol. It is the concrete supportive application that distinguishes them. 
  SOCKS4 only supports TCP application, while SOCKS5 supports TCP and UDP  applications. However, because of the fact that SOCKS5 also supports  various authentication mechanisms and domain name resolution (DNS),  which does not go with SOCKS4, the outgoing SOCKS proxy is normally  SOCKS4 proxy. As a result, UDP applications are not supported normally.  That is to say, SOCKS5 could support anything that SOCKS4 supports, but  it is not the same with SOCKS4. 


